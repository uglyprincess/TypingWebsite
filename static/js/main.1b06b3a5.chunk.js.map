{"version":3,"sources":["components/Header.jsx","components/Word.jsx","components/WordWindow.jsx","components/Timer.jsx","components/Result.jsx","components/TypeArea.jsx","App.js","index.js"],"names":["Header","className","Word","props","checkAgainst","user","actualWord","value","status","undefined","style","color","soFar","lastTrueIndex","length","i","console","log","Math","min","textUnderline","incorrect","slice","textDecoration","checker","Words","index","arr","wordArray","curr","received","data","userInput","typed","map","word","Timer","useState","limit","time","ticktock","id","useRef","clear","clearInterval","current","useEffect","started","setInterval","parentCallback","ResultCard","speed","updateSpeed","WPM","floor","words","onClick","TypeArea","difficulty","changeDiff","typeWords","updateList","input","inColor","changeColor","toCompare","updateCompare","inputRef","scrollRef","updateTime","start","restart","totalWords","updateWPM","finished","checkFinish","commonWords","randomWords","exactly","maxLength","rareWords","textGenerator","newArray","freq","random","array","randIndex","currIndex","shuffle","concat","display","InputLabel","TextField","select","onChange","event","target","label","setting","MenuItem","Select","labelId","Button","variant","backgroundColor","focus","scrollIntoView","ref","InputProps","fontSize","wordBeingTyped","currWord","wordsSoFar","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1b06b3a5.chunk.js","sourcesContent":["import React from 'react';\r\nimport './header.css';\r\n\r\nexport default function Header(){\r\n\r\n    return (<div className=\"header\">\r\n        <div className=\"home\">\r\n        </div>\r\n        <div className=\"title\">\r\n            <h1>typing speed</h1>\r\n        </div>\r\n        <div className=\"dropdown\">\r\n        </div>\r\n    </div>);\r\n}","import './word.css';\r\n\r\nexport default function Word(props) {\r\n\r\n    var checkAgainst = props.user;\r\n    var actualWord = props.value;\r\n\r\n    function checker() {\r\n\r\n        if(checkAgainst === undefined)\r\n            return <div className='current'>\r\n                    <div style={{color: 'black'}}>\r\n                        â”‚\r\n                    </div>\r\n                    <div>\r\n                        {actualWord}\r\n                    </div>\r\n                </div>;\r\n\r\n        if(checkAgainst === actualWord + \" \")\r\n        {\r\n            return '';\r\n        }\r\n\r\n        var soFar = true;\r\n        var lastTrueIndex = checkAgainst.length;\r\n\r\n        for(var i=0;i<checkAgainst.length;i++)\r\n        {\r\n            console.log(checkAgainst, actualWord);\r\n            \r\n            if(checkAgainst[i] === actualWord[i])\r\n            {\r\n                console.log(\"Going right!\");\r\n                // newColor('green');\r\n            }\r\n\r\n            else\r\n            {\r\n                console.log(\"Check again!\");\r\n                // newColor('red');\r\n                soFar = false;\r\n                lastTrueIndex = Math.min(lastTrueIndex, i);\r\n                break;\r\n            }\r\n\r\n        }\r\n\r\n        var textUnderline = (!soFar) ? 'underline' : 'none';\r\n        var incorrect = checkAgainst.slice(lastTrueIndex, checkAgainst.length);\r\n        checkAgainst = checkAgainst.slice(0,lastTrueIndex);\r\n\r\n        return(<div className='current'>\r\n            <div style={{color: 'green', textDecoration: textUnderline}}>\r\n                {checkAgainst}\r\n            </div>\r\n            <div style={{color: 'red', textDecoration: 'line-through'}}>\r\n                {incorrect}\r\n            </div>\r\n            <div className=\"virtual_cursor\">\r\n                |\r\n            </div>\r\n            <div>\r\n                {actualWord.slice(lastTrueIndex,)}\r\n            </div>\r\n        </div>);\r\n\r\n    }\r\n\r\n    if(props.status === true)\r\n        return checker();\r\n\r\n    else\r\n    {\r\n        return (<div className=\"box\">\r\n            {actualWord}\r\n        </div>);\r\n    }\r\n}","import Word from './Word.jsx';\r\nimport './word.css';\r\n\r\nexport default function Words(props) {\r\n\r\n    // console.log(props.wordArray);\r\n\r\n    var index = 0;\r\n\r\n    var arr = props.wordArray.slice(1, 50);\r\n    var curr = props.received.data;\r\n    var userInput = props.received.typed;\r\n\r\n    // console.log(userInput);\r\n\r\n    return <div className='parent'>\r\n        <Word status={true} value={curr} key={index++} user={userInput}/>\r\n        {arr.map((word) => <Word status={false} value={word} key={index++}/>)}\r\n    </div>;\r\n\r\n}","import { useState, useEffect, useRef } from \"react\";\r\n\r\nexport default function Timer(props) {\r\n\r\n    const [time, ticktock] = useState(props.limit); \r\n    const id = useRef(null);\r\n\r\n    function clear() {\r\n        clearInterval(id.current);\r\n    }\r\n\r\n    useEffect(() => {\r\n        ticktock(props.limit);\r\n    }, [props.limit]);\r\n\r\n    useEffect(() => {\r\n\r\n        if(props.started)\r\n        {\r\n            id.current = setInterval(() => {\r\n                ticktock((time) => time-1);\r\n            }, 1000);\r\n        }\r\n        else\r\n            ticktock(props.limit);\r\n\r\n        return () => clear();\r\n    }, [props.started]);\r\n\r\n    useEffect(() => {\r\n        if(time===0)\r\n            clear();\r\n    }, [time]);\r\n\r\n    function hasStarted() {\r\n\r\n        console.log(props.started, time, props.limit);\r\n\r\n        if(!props.started)\r\n            return \"Press 'Start'!\";\r\n        else if(time!==0)\r\n            return time;\r\n        else\r\n        {\r\n            props.parentCallback();\r\n            return \"Time up!\";\r\n        }\r\n    }\r\n\r\n    return (<div>\r\n        {hasStarted()}\r\n    </div>);\r\n}","import {useEffect, useState} from 'react';\r\nimport Replay from '@material-ui/icons/Replay';\r\nimport './result.css';\r\n\r\nexport default function ResultCard(props) {\r\n\r\n    const [speed, updateSpeed] = useState();\r\n\r\n    useEffect(() => {\r\n\r\n        var WPM = Math.floor((props.words/props.time) * 60);\r\n        updateSpeed(WPM);\r\n        \r\n    }, [props.words, props.time]);\r\n\r\n    function hitReplay() {\r\n\r\n        props.parentCallback();\r\n    }\r\n\r\n    return (<div className=\"result_card\">\r\n        <div className=\"speed\">\r\n            <h1>Your speed is {speed} WPM!</h1>\r\n            <div className=\"button_plate\">\r\n                <Replay className=\"replay\" onClick={hitReplay}/>\r\n            </div>\r\n        </div>\r\n    </div>);\r\n}","import {React, useState, useRef} from \"react\";\r\nimport randomWords from 'random-words';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Button from '@material-ui/core/Button';\r\nimport WordWindow from './WordWindow.jsx';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Timer from './Timer.jsx';\r\nimport Result from './Result.jsx';\r\nimport './typearea.css';\r\n\r\nexport default function TypeArea(){\r\n\r\n    const [difficulty, changeDiff] = useState(4);\r\n    const [typeWords, updateList] = useState(['']);\r\n    const [input] = useState();\r\n    const [inColor, changeColor] = useState('#D1E8E4');\r\n    const [toCompare, updateCompare] = useState({\r\n        data: '',\r\n        typed: ''\r\n    });\r\n\r\n    const inputRef = useRef();\r\n    const scrollRef = useRef(null);\r\n\r\n    const [time, updateTime] = useState(60);\r\n    const [start, restart] = useState(false);\r\n    const [totalWords, updateWPM] = useState(0);\r\n    const [finished, checkFinish] = useState(false);\r\n\r\n    var commonWords = randomWords({exactly:500, maxLength: 10 });\r\n    var rareWords = randomWords({exactly:500, maxLength: 15});\r\n\r\n    const settings = [\r\n        {\r\n            value: 4,\r\n            label: \"Novice\"\r\n        },\r\n        {\r\n            value: 3,\r\n            label: \"Easy\"\r\n        },\r\n        {\r\n            value: 2,\r\n            label: \"Moderate\"\r\n        },\r\n        {\r\n            value: 1,\r\n            label: \"Hard\"\r\n        },\r\n        {\r\n            value: 0,\r\n            label: \"Expert\"\r\n        }\r\n    ]\r\n\r\n    function shuffle(array) {\r\n\r\n        var currIndex = array.length, randIndex;\r\n\r\n        while(currIndex!==0)\r\n        {\r\n            randIndex = Math.floor(Math.random() * currIndex);\r\n            currIndex--;\r\n\r\n            [array[currIndex], array[randIndex]] = [array[randIndex], array[currIndex]];\r\n        }\r\n\r\n        return array;\r\n    }\r\n\r\n    function handleChange(event) {\r\n        changeDiff(event.target.value);\r\n    }\r\n\r\n    function textGenerator() {\r\n        \r\n        let newArray = [];\r\n\r\n        let freq = difficulty;\r\n        let start = (Math.floor(Math.random() * 100));\r\n        newArray = commonWords.slice(start, start + freq*100);\r\n\r\n        freq = 5 - difficulty;\r\n        start = (Math.floor(Math.random()* 100));\r\n        newArray = newArray.concat(rareWords.slice(start, start + freq*100));\r\n\r\n        newArray = shuffle(newArray);\r\n        updateCompare({\r\n            data: newArray[0],\r\n            typed: ''\r\n        });\r\n\r\n        return(newArray);\r\n    }\r\n\r\n    function fetchText() {\r\n\r\n        updateList(textGenerator());\r\n        restart(false);\r\n        console.log(time);\r\n    }\r\n\r\n    function startTimer() {\r\n        focus();\r\n        executeScroll();\r\n        restart(true);\r\n    }\r\n\r\n    function focus() {\r\n\r\n        // console.log(inputRef.current);\r\n        inputRef.current.focus();\r\n\r\n    }\r\n\r\n    function executeScroll() {\r\n        scrollRef.current.scrollIntoView();\r\n    }\r\n\r\n    function changeTimeLimit(event) {\r\n        updateTime(event.target.value);\r\n    }\r\n\r\n    function timeUp() {\r\n\r\n        updateList([]);\r\n        updateCompare({\r\n            data: \"\",\r\n            typed: \"\"\r\n        });\r\n        restart(false);\r\n        checkFinish(true);\r\n    }\r\n\r\n    function tryAgain() {\r\n        checkFinish(false);\r\n    }\r\n\r\n    function checker(event) {\r\n\r\n        var wordBeingTyped = event.target.value;\r\n        var currWord = typeWords[0];\r\n\r\n        updateCompare({\r\n            data: currWord,\r\n            typed: wordBeingTyped\r\n        });\r\n\r\n        // console.log(wordBeingTyped, currWord);\r\n\r\n        if(wordBeingTyped === currWord + \" \")\r\n        {\r\n            updateCompare({\r\n                data: typeWords[1],\r\n                typed: ''\r\n            });\r\n\r\n            updateWPM((wordsSoFar) => wordsSoFar+1);\r\n            \r\n            updateList(typeWords.slice(1,));\r\n            event.target.value = '';\r\n\r\n            changeColor('#D1E8E4');\r\n            return;\r\n        }\r\n\r\n    }\r\n\r\n    return(<div className=\"whole\">\r\n        <div className=\"configure\" style={{display: finished && \"none\"}}>\r\n            <div className=\"settings\">\r\n                <div className=\"settings_diff\">\r\n                <InputLabel id=\"select-difficulty\" className=\"difficulty_label\">Difficulty</InputLabel>\r\n                    <TextField\r\n                    id=\"outlined-select-difficulty\"\r\n                    select\r\n                    className=\"diff_select\"\r\n                    value={difficulty}\r\n                    onChange={handleChange}\r\n                    >\r\n                    {settings.map((setting) => (\r\n                        <MenuItem key={setting.value} value={setting.value}>\r\n                        {setting.label}\r\n                        </MenuItem>\r\n                    ))}\r\n                    </TextField>\r\n                </div>\r\n                <div className=\"settings_time\">\r\n                    <InputLabel id=\"select-time-limit\" className=\"time_label\">Time</InputLabel>\r\n                    <Select\r\n                        labelId=\"simple-select-label\"\r\n                        id=\"simple-select\"\r\n                        className=\"time_select\"\r\n                        value={time}\r\n                        onChange={changeTimeLimit}\r\n                    >\r\n                        <MenuItem value={1}>1 second</MenuItem>\r\n                        <MenuItem value={30}>30 seconds</MenuItem>\r\n                        <MenuItem value={60}>60 seconds</MenuItem>\r\n                        <MenuItem value={120}>120 seconds</MenuItem>\r\n                    </Select>\r\n                </div>\r\n            </div>\r\n            <div className=\"button_field\">\r\n                <div className=\"button_one\">\r\n                    <Button variant=\"contained\" style={{ backgroundColor: \"#3D2C8D\"}} color=\"primary\" onClick={fetchText} className=\"fetch_button\">\r\n                        Fetch Text\r\n                    </Button>\r\n                </div>\r\n                <div className=\"button_two\">\r\n                    <Button variant=\"contained\" style={{ backgroundColor: \"#1C7947\"}} color=\"primary\" onClick={startTimer} className=\"start_button\">\r\n                        Start\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n            <div className=\"timer\" ref={scrollRef}>\r\n                <Timer limit={time} started={start} parentCallback={timeUp}/>\r\n            </div>\r\n        </div>\r\n        <div className=\"displayText\" style={{display: finished && \"none\"}}>\r\n            <div className=\"show\">\r\n                <WordWindow wordArray={typeWords} received={toCompare}/>\r\n            </div>\r\n        </div>\r\n        <div className=\"typehere\" style={{display: finished && \"none\"}}>\r\n            <TextField \r\n                className=\"inputfield\" \r\n                variant=\"filled\"\r\n                inputRef={inputRef}\r\n                InputProps={{\r\n                    style: {fontSize: '30px', backgroundColor: inColor}\r\n                }}\r\n\r\n                value={input}\r\n                onChange={checker}\r\n            />\r\n        </div>\r\n        <div className=\"output\" style={{display: !finished && \"none\"}}>\r\n            <Result words={totalWords} time={time} parentCallback={tryAgain}/>\r\n        </div>\r\n    </div>);\r\n      \r\n}","import './App.css';\r\nimport Header from './components/Header.jsx';\r\nimport TypeArea from './components/TypeArea';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <Header />\r\n            <TypeArea/>\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}